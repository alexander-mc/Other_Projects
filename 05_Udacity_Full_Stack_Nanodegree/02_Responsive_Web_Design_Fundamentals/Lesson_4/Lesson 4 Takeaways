Lesson 4 Takeaways

#1) Column Drop Pattern

<div class=“container”>
  <div class=“box dark_blue”></div>
  <div class=“box light_blue”></div>
  <div class=“box green”></div>
</div>


.container {
  display: flex;
  flex-wrap: wrap;
}

.box {
  width: 100%;
}

@media screen and (min-width: 450px) {
  .dark_blue {
    width: 25%;
  }
  .light_blue {
    width: 75%;
  }
}

@media screen and (min-width: 550px) {
  .dark_blue, .green {
    width: 25%;
  }
  .light_blue {
    width: 50%;
  }
}


#2) Mostly fluid (like column drop, but margins added on left and right)

.box {
  width: 100%;
}

@media screen and (min-width: 450px) {
  .light_blue, .green {
    width: 50%;
  }
}

@media screen and (min-width: 550px) {
  .dark_blue, .light_blue {
    width: 50%;
  }
  .green, .red, .orange {
    width: 33.33333%;
  }
}

@media screen and (min-width: 700px) {
  .container {
    width: 700px;
*   margin-left: auto;
*   margin-right: auto;
  }
}


Another example:

      .container {
        display: flex;
        flex-wrap: wrap;
      }

      .box {
        width: 100%;
      }

      @media screen and (min-width: 450px) {
	    .light_blue, .green {
		  width: 50%;
		}
      }

      @media screen and (min-width: 550px) {
		.red {
		  width: 33.3333%;
		}
		.orange {
		  width: 66.6666%;
		}
      }

      @media screen and (min-width: 800px) {
        .container {
		  width: 800px;
		  margin-left: auto;
		  margin-right: auto;
		}
      }


#3) Layout Shifter Patter. Most responsive pattern. Requires more planning to maintain.

<div class=“container”>
  <div class=“box dark_blue”></div>
  <div class=“container” id=“container2”>
    <div class=“box light_blue></div>
    <div class=“box green”></div>
  </div>
  <div class=“box red”></div>
</div>

.container {
* width: 100%;
  display: flex;
  flex-wrap: wrap;
}

.box {
  width: 100%;
}

@media screen and (min-width: 500px) {
  .dark_blue {
    width: 50%;
  }
  #container2 {
    width: 50%;
  }
}

@media screen and (min-width: 600px) {
  .dark_blue {
    width: 50%;
    order: 1;
  }
  #container2 {
    width: 50%;
  }
  .red {
    width: 25%;
    order: -1;
  }
}

#4) Off Canvas Pattern (only shows elements such as navigation and at menus if screen is big enough).

<nav id=“drawer” class=“dark_blue”>
</nav>

<main class=“light_blue”>
</main>

html, body, main {
  height: 100%;
  width: 100%;
}

nav {    		  	       <— off-canvas element
  width: 300px;    		       
  height: 100%;
  position: absolute;
  transform: translate(-300px, 0);     <— moves off-canvas element on screen
  transition: transform 0.3s ease;     <— animates nicely onto screen
}


# When you want nav (off-campus element) to appear, write the code:

nav.open {
  transform: translate(0,0);           <— re-sets the transform (makes element appear)
}


# Add breakpoint to reposition everything back to original spot (when screen is a certain width, off-screen element appears by default)

@media screen and (min-width: 600px) {
  nav {		
    position: relative;
    transform: translate(0,0);         <— re-sets the transform (makes element appear)
  }
  body {
    display: flex;
    flex-flow: row nowrap;
  }
  main {
    width: auto;
    flex-grow: 1;
  }
}



